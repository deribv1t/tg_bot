import telebot
from telebot import types
import base64

bot = telebot.TeleBot('8008231968:AAHG3nZeDq2E3yTQLut6TUyt1mbcl_hVvts')

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}
input_deal = False
price_sell = ''
description = ''
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
bot.set_my_commands([
    types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
])

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '/start':
        chat_id = message.chat.id
        if chat_id not in user_data:
            user_data[chat_id] = {'card_details': '', 'waiting_for_card': False,
                'ton_details': '', 'waiting_for_ton': False,
                'input_TON': False, 'input_deal':False,
                'price_sell':0.0,'description':'',
                'encoded':None, 'deal_id':0,
                "chat_dealer": 0,"mes_dealer":0
            }
        main_menu(message)

    elif len(message.text.split()) > 1:
        chat_id = message.chat.id
        if chat_id not in user_data:
            user_data[chat_id] = {'card_details': '', 'waiting_for_card': False,
                'ton_details': '', 'waiting_for_ton': False,
                'input_TON': False, 'input_deal':False,
                'price_sell':0.0,'description':'',
                'encoded':None, 'deal_id':0,
                "chat_dealer": 0,"mes_dealer":0
            }
        encoded = message.text.split()[1]
        try:
            padded = encoded + '=' * (4 - len(encoded) % 4)
            decoded = base64.urlsafe_b64decode(padded).decode()
            id_chat, id_message = map(int, decoded.split('/'))
            
        except Exception as e:
            bot.send_message(message.chat.id, "–°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

        if id_chat == message.chat.id:
            bot.send_message(
                chat_id=message.chat.id,
                text=f"‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–≤–æ–µ–π –∂–µ —Å–¥–µ–ª–∫–µ."
            )
        else:
            price_sell = user_data[id_chat]['price_sell']
            description = user_data[id_chat]['description']

            bot.send_message(   
                chat_id=message.chat.id,
                text=f"‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\nüí∞ –°—É–º–º–∞: {price_sell} {user_data[id_chat]['currency']}\n\
üìú –û–ø–∏—Å–∞–Ω–∏–µ: {description}\nüîó –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: https://t.me/ExempleExemple_bot_bot?start={encoded}"
            )

            dealer_mes_id = bot.send_message(   
                chat_id=id_chat,
                text=f"*‚úÖ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–¥–µ–ª–∫–µ.*\n\n‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: 27\n–û–∂–∏–¥–∞–π—Ç–µ –æ–ø–ª–∞—Ç—ã",
                parse_mode="Markdown"
            )

            confirm_menu = types.InlineKeyboardMarkup()
            confirm = types.InlineKeyboardButton(text='‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –ø–µ—Ä–µ–≤–µ–ª–∏ –¥–µ–Ω—å–≥–∏', 
                                                 callback_data='confirm_pay')
            confirm_menu.add(confirm)

            bot.send_message(   
                chat_id=chat_id,
                text=f"*‚úÖ –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –Ω–∞—à —Å—á—ë—Ç.* \n\n–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã",
                parse_mode="Markdown",
                reply_markup=confirm_menu
            )
            
            user_data[chat_id]["chat_dealer"] = id_chat
            user_data[chat_id]["mes_dealer"] = dealer_mes_id.message_id
        
    
    else:
        chat_id = message.chat.id
        if chat_id in user_data and user_data[chat_id].get('waiting_for_card'):
            user_data[chat_id]['card_details'] = message.text
            user_data[chat_id]['waiting_for_card'] = False

            last_msg_id = user_data[chat_id].get('last_message_id')
            
            card_menu = types.InlineKeyboardMarkup()
            back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')
            card_menu.add(back)

            message_card = f"""*üí≥ –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∞—Ä—Ç—ã: *`{message.text}`\n\n\
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é."""
            try:
                bot.edit_message_caption(
                    chat_id=chat_id,
                    message_id=last_msg_id,
                    caption=message_card,
                    parse_mode="Markdown",
                    reply_markup=card_menu
                )

            except telebot.apihelper.ApiTelegramException:
                chat_id=bot.send_message(
                    message.chat.id,
                    text=message_card,
                    parse_mode="Markdown",
                    reply_markup=card_menu
                )
                bot.delete_message(chat_id, last_msg_id)

        elif chat_id in user_data and user_data[chat_id].get('waiting_for_ton'):
            user_data[chat_id]['ton_details'] = message.text
            user_data[chat_id]['waiting_for_ton'] = False

            last_msg_id = user_data[chat_id].get('last_message_id')
            
            ton_menu = types.InlineKeyboardMarkup()
            back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')
            ton_menu.add(back)

            message_ton = f"*üîë –í–∞—à —Ç–µ–∫—É—â–∏–π TON-–∫–æ—à–µ–ª–µ–∫:* `{message.text}`\n\n\
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é."

            try:
                bot.edit_message_caption(
                    chat_id=chat_id,
                    message_id=last_msg_id,
                    caption=message_ton,
                    parse_mode="Markdown",
                    reply_markup=ton_menu
                )

            except telebot.apihelper.ApiTelegramException:
                bot.send_message(
                    chat_id,
                    text=message_ton,
                    parse_mode="Markdown",
                    reply_markup=ton_menu
                )
                bot.delete_message(chat_id, last_msg_id)


        elif user_data[chat_id]['input_TON'] or user_data[chat_id]['input_deal']:
            try:
                price_sell = message.text
                price_sell = float(price_sell)

                if user_data[chat_id]['input_TON']:
                    bot.send_message(
                        chat_id=chat_id,
                        text="*üí≥ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã:*\n\n–ü—Ä–∏–º–µ—Ä:" \
                        " `–ï–≤—Ä–æ–ë–∞–Ω–∫ - 1234567891012345`",
                        parse_mode="Markdown"
                    )
                    user_data[chat_id]['input_TON'] = False 
                else: 
                    user_data[chat_id]['price_sell'] = price_sell
                    bot.send_message(
                        chat_id=chat_id,
                        text=f"üìù –£–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç–µ –≤ —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –∑–∞ {price_sell}\
{user_data[chat_id]['currency']}:\n\n–ü—Ä–∏–º–µ—Ä: `10 –ö–µ–ø–æ–∫ –∏ –ü–µ–ø–µ...`",
                        parse_mode="Markdown"
                    )
                    
                    user_data[chat_id]['input_deal'] = False     
                    bot.register_next_step_handler(message,get_description)

            except ValueError:
                bot.send_message(
                chat_id=chat_id,
                text="‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç 100.5",
                parse_mode="Markdown"
            )


def main_menu(message):
    menu = types.InlineKeyboardMarkup()
    
    key_add = types.InlineKeyboardButton(text='üì©–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏', callback_data='add')
    key_create = types.InlineKeyboardButton(text='üìù–°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É', callback_data='create')
    key_replace = types.InlineKeyboardButton(text='üí±–û–±–º–µ–Ω–Ω–∏–∫', callback_data='replace')
    key_ref = types.InlineKeyboardButton(text='üîó–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞', callback_data='ref')
    key_balance = types.InlineKeyboardButton(text='–ë–∞–ª–∞–Ω—Å', callback_data='balance')
    key_support = types.InlineKeyboardButton(text='üìû–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url="https://t.me/+h7hMiQoEYDUyNjQy")
    
    menu.add(key_add)
    menu.add(key_create)
    menu.add(key_replace)
    menu.add(key_ref)
    menu.add(key_balance)
    menu.add(key_support)
    
    question = """*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ELF OTC ‚Äì –Ω–∞–¥–µ–∂–Ω—ã–π P2P-–≥–∞—Ä–∞–Ω—Ç

üíº –ü–æ–∫—É–ø–∞–π—Ç–µ –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ –≤—Å—ë, —á—Ç–æ —É–≥–æ–¥–Ω–æ ‚Äì –±–µ–∑–æ–ø–∞—Å–Ω–æ!*
–û—Ç Telegram-–ø–æ–¥–∞—Ä–∫–æ–≤ –∏ NFT –¥–æ —Ç–æ–∫–µ–Ω–æ–≤ –∏ —Ñ–∏–∞—Ç–∞ ‚Äì —Å–¥–µ–ª–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç –ª–µ–≥–∫–æ –∏ –±–µ–∑ —Ä–∏—Å–∫–∞.

üîπ –£–¥–æ–±–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞–º–∏
üîπ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∏ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤

üìñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?
–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π ‚Äî https://telegra.ph/Podrobnyj-gajd-po-ispolzovaniyu-GllftEllfRobot-06-24\n

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ:"""

    if message.text == '/start':
        bot.send_photo(chat_id=message.chat.id, 
                    caption=question, 
                    photo=open('photo_2025-06-16_04-13-33.jpg', 'rb'),
                    reply_markup=menu,
                    parse_mode="Markdown",
                    )
    
    else:
        bot.edit_message_caption(
            chat_id=message.chat.id,
            message_id=message.id,
            caption=question,
            parse_mode="Markdown",
            reply_markup=menu
        )

        chat_id = message.chat.id
        message_id = message.id
        user_data[chat_id]['last_message_id'] = message_id

@bot.callback_query_handler(func=lambda call: True)

def callback_worker(call):
    chat_id = call.message.chat.id
    message_id = call.message.message_id

    back_menu = types.InlineKeyboardMarkup()
    back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')
    back_menu.add(back)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
    if chat_id not in user_data:
        user_data[chat_id] = {'card_details': '', 'waiting_for_card': False,
                              'ton_details': '', 'waiting_for_ton': False,
                              'input_TON': False, 'input_deal':False,
                              'price_sell':0.0,'description':'',
                               'encoded':None, 'deal_id':0,
                               "chat_dealer": 0,"mes_dealer":0
                            }
    
    if call.data == "add":
        add_menu = types.InlineKeyboardMarkup()
        add_TON = types.InlineKeyboardButton(text='ü™ô–î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å TON-–∫–æ—à–µ–ª–µ–∫', callback_data='add_TON')
        create_card = types.InlineKeyboardButton(text='üí≥–î–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä—Ç—É', 
                                                callback_data='create_card')

        add_menu.add(add_TON)
        add_menu.add(create_card)
        add_menu.add(back)
        
        message_add = """*üì• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏*

_–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ãüëá_"""
        
        bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=message_add,
            parse_mode="Markdown",
            reply_markup=add_menu
        )

        user_data[chat_id]['last_message_id'] = message_id

    elif call.data == "add_TON":
        create_add_TON(chat_id,message_id)

    elif call.data == "create_card":
        add_create_card(chat_id,message_id)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫
    elif call.data == "create":
        create_deal(chat_id,message_id)

    elif call.data == "confirm_pay":
        if chat_id == 8194815542 or chat_id == 5423423432:

            confirm_menu = types.InlineKeyboardMarkup()
            confirm = types.InlineKeyboardButton(text='‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω—Ñ—Ç',
                                            callback_data='confirm_nft')
            confirm_menu.add(confirm)

            bot.send_message(
                chat_id=user_data[chat_id]["chat_dealer"],
                text=f"*‚úÖ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø–µ—Ä–µ–≤–µ–ª –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—á—ë—Ç –Ω–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞.*\n\n–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –µ–º—É –Ω—Ñ—Ç. \
–î–µ–Ω—å–≥–∏ –ø—Ä–∏–¥—É—Ç –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
                parse_mode="Markdown",
                reply_markup=confirm_menu
            )
        else: 
            bot.send_message(
                chat_id=chat_id,
                text=f"*‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!*",
                parse_mode="Markdown"
            )
        
    elif call.data == "confirm_nft":
        bot.send_message(
            chat_id=chat_id,
            text=f"‚úÖ –í–∞—Å –Ω–∞–µ–±–∞–ª–∏! *–î–µ–Ω—å–≥–∏ ‚Äî —ç—Ç–æ –∑–ª–æ‚Ä¶ –¢–∞–∫ —á—Ç–æ —è –≤–∑—è–ª —ç—Ç–æ—Ç –≥—Ä–µ—Ö –Ω–∞ —Å–µ–±—è. –¢—ã –¥–æ–ª–∂–µ–Ω –º–Ω–µ —Å–∫–∞–∑–∞—Ç—å —Å–ø–∞—Å–∏–±–æ!*\
**–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –ª–æ—Ö, —è –∏—Ö –ø–æ—Ç—Ä–∞—á—É —Å —É–º–æ–º‚Ä¶ –®—É—á—É, –∫–æ–Ω–µ—á–Ω–æ, –ø—Ä–æ—Å–∞–∂—É –Ω–∞ –≤—Å—è–∫—É—é —Ö—É–π–Ω—é. –ù–æ –≤–µ—Å–µ–ª–æ!**",
            parse_mode="Markdown"
            )

    elif call.data == "deal_TON":
        deal(chat_id,message_id,'TON')

    elif call.data == "RUB":
        deal(chat_id,message_id,'RUB')
    elif call.data == "UAH":
        deal(chat_id,message_id,'UAH')
    elif call.data == "KZT":
        deal(chat_id,message_id,'KZT')
    elif call.data == "BYN":
        deal(chat_id,message_id,'BYN')
    elif call.data == "UZS":
        deal(chat_id,message_id,'UZS')
    elif call.data == "KGS":
        deal(chat_id,message_id,'KGS')
    elif call.data == "AZN":
        deal(chat_id,message_id,'AZN')
    elif call.data == "TON":
        deal(chat_id,message_id,'TON')

    elif call.data == 'back_deal':
        deal(chat_id,message_id,user_data[chat_id]['currency'])

    elif call.data == "deal_star":
        deal_star(chat_id,message_id)

    elif call.data == "replace_currency":
        replace_currency(chat_id,message_id)

    elif call.data == "cancel_deal":
        cancel_message_deal(chat_id,message_id)

    elif call.data == "yes":
        bot.delete_message(chat_id, user_data[chat_id]["deal_id"]+1)
        bot.delete_message(chat_id, user_data[chat_id]["last_message_id"]+1)
    elif call.data == 'no':
        bot.delete_message(chat_id, user_data[chat_id]["last_message_id"]+1)

    elif call.data == "exchange":
        ready_exchange(chat_id,message_id)
    
    elif call.data == "replace":
        replace_money(chat_id,message_id)

    elif call.data == "TON_RUB":
        price_TON(chat_id,message_id,'RUB üá∑üá∫ (306.94)')
    elif call.data == "TON_UAH":
        price_TON(chat_id,message_id,'UAH üá∫üá¶ (151.79)')
    elif call.data == "TON_KZT":
        price_TON(chat_id,message_id,'KZT üá∞üáø (1835.68)')
    elif call.data == "TON_BYN":
        price_TON(chat_id,message_id,'BYN üáßüáæ (11.95)')
    elif call.data == "TON_UZS":
        price_TON(chat_id,message_id,'UZS üá∫üáø (47210.63)')
    elif call.data == "TON_KGS":
        price_TON(chat_id,message_id,'KGS üá∞üá¨ (312.59)')


    elif call.data == "ref":
        message_ref = f"üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n\n\
`https://t.me/GllftEllfRobot?start=ref_{chat_id}`\n\n\
üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 0\nüí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 0.0 TON\n40% –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏ –±–æ—Ç–∞"

        bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=message_ref,
            parse_mode="Markdown",
            reply_markup=back_menu
        )

        user_data[chat_id]['last_message_id'] = message_id

    elif call.data == "balance":
        message_balance = f"*üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å*\n\nüìä –°—É–º–º–∞: 0.00 TON\n‚úÖ –£—Å–ø–µ—à–Ω—ã–µ —Å–¥–µ–ª–∫–∏: 0\n\n\
‚ö†Ô∏è –û—à–∏–±–∫–∞: –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ 3 —É—Å–ø–µ—à–Ω–æ–π —Å–¥–µ–ª–∫–∏"

        bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=message_balance,
            parse_mode="Markdown",
            reply_markup=back_menu
        )

        user_data[chat_id]['last_message_id'] = message_id
    
    elif call.data == "back_menu":
        if chat_id in user_data:
            user_data[chat_id]['waiting_for_card'] = False
            user_data[chat_id]['waiting_for_ton'] = False
            user_data[chat_id]['input_TON'] = False
            user_data[chat_id]['input_deal'] = False
            
        main_menu(call.message)

        

def create_add_TON(chat_id,message_id):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã
        user_data[chat_id]['waiting_for_TON'] = True
        
        ton_menu = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')
        ton_menu.add(back)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
        current_ton = user_data[chat_id].get('ton_details', '–Ω–µ —É–∫–∞–∑–∞–Ω—ã')
        
        if current_ton == '':
            message_ton = f"*üîë –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à TON-–∫–æ—à–µ–ª–µ–∫:*\n\n\
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞\n"
        else:
            message_ton = f"*üîë –í–∞—à —Ç–µ–∫—É—â–∏–π TON-–∫–æ—à–µ–ª–µ–∫:* `{current_ton}`\n\n\
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é."
            
        bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=message_ton,
            parse_mode="Markdown",
            reply_markup=ton_menu
        )

        user_data[chat_id]['waiting_for_ton'] = True
        user_data[chat_id]['last_message_id'] = message_id


def add_create_card(chat_id,message_id):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã
        user_data[chat_id]['waiting_for_card'] = True
        
        card_menu = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')
        card_menu.add(back)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
        current_card = user_data[chat_id].get('card_details')
        
        if current_card == '':
            message_card = f"*üîë –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:*\n\n\
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\n–ï–≤—Ä–æ–ë–∞–Ω–∫ - 12345678910121345"
        else:
            message_card = f"*üí≥ –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∞—Ä—Ç—ã: *`{current_card}`\n\n"\
"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é."
                
        bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=message_card,
            parse_mode="Markdown",
            reply_markup=card_menu
        )

        user_data[chat_id]['waiting_for_card'] = True
        user_data[chat_id]['last_message_id'] = message_id

def create_deal(chat_id,message_id):
    deal_message = "*üí∞–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã:*"

    deal_menu = types.InlineKeyboardMarkup()
    deal_TON = types.InlineKeyboardButton(text='üíé –ù–∞ TON-–∫–æ—à–µ–ª–µ–∫', callback_data='deal_TON')
    deal_card = types.InlineKeyboardButton(text='üí≥ –ù–∞ –∫–∞—Ä—Ç—É', callback_data='deal_TON')
    deal_star = types.InlineKeyboardButton(text='‚≠ê –ó–≤–µ–∑–¥—ã', callback_data='deal_star')
    back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')

    deal_menu.add(deal_TON)
    deal_menu.add(deal_card)
    deal_menu.add(deal_star)
    deal_menu.add(back)

    bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=deal_message,
            parse_mode="Markdown",
            reply_markup=deal_menu
        )
    
    user_data[chat_id]['last_message_id'] = message_id


def deal(chat_id,message_id,currency):
    deal_message = f"*üíº –°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏*\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É {currency} —Å–¥–µ–ª–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `100.5`"

    deal_menu = types.InlineKeyboardMarkup()
    replace_currency = types.InlineKeyboardButton(text='üí± –ò–∑–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É', callback_data='replace_currency')
    back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')

    deal_menu.add(replace_currency)
    deal_menu.add(back)

    bot.edit_message_caption(
        chat_id=chat_id,
        message_id=message_id,
        caption=deal_message,
        parse_mode="Markdown",
        reply_markup=deal_menu
    )

    user_data[chat_id]['input_deal'] = True
    user_data[chat_id]['last_message_id'] = message_id
    user_data[chat_id]['currency'] = currency

def deal_star(chat_id,message_id):
    deal_message = "*üíº –°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏*\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É Stars —Å–¥–µ–ª–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `100.5`"

    deal_menu = types.InlineKeyboardMarkup()
    back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')
    deal_menu.add(back)

    bot.edit_message_caption(
        chat_id=chat_id,
        message_id=message_id,
        caption=deal_message,
        parse_mode="Markdown",
        reply_markup=deal_menu
    )

    user_data[chat_id]['input_deal'] = True
    user_data[chat_id]['last_message_id'] = message_id
    user_data[chat_id]['currency'] = 'Stars'


def replace_currency(chat_id,message_id):
    message_currency = "*üí± –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è —Å–¥–µ–ª–∫–∏:*"

    currency_menu = types.InlineKeyboardMarkup()
    RUB = types.InlineKeyboardButton(text='RUB üá∑üá∫', callback_data='RUB')
    UAH = types.InlineKeyboardButton(text='UAH üá∫üá¶', callback_data='UAH')
    KZT = types.InlineKeyboardButton(text='KZT üá∞üáø', callback_data='KZT')
    BYN = types.InlineKeyboardButton(text='BYN üáßüáæ', callback_data='BYN')
    UZS = types.InlineKeyboardButton(text='UZS üá∫üáø', callback_data='UZS')
    KGS = types.InlineKeyboardButton(text='KGS üá∞üá¨', callback_data='KGS')
    AZN = types.InlineKeyboardButton(text='AZN üá¶üáø', callback_data='AZN')
    TON = types.InlineKeyboardButton(text='TON üíé', callback_data='TON')
    back = types.InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='back_deal')
    currency_menu.add(
        RUB,UAH,KZT,BYN,UZS,KGS,AZN,TON
    )
    currency_menu.add(back)

    bot.edit_message_caption(
        chat_id=chat_id,
        message_id=message_id,
        caption=message_currency,
        parse_mode="Markdown",
        reply_markup=currency_menu
    )

def get_description(message):
    description = message.text
    chat_id = message.chat.id
    user_data[chat_id]['description'] = description
    price_sell = user_data[chat_id]['price_sell']

    text = f"{chat_id}/{message.message_id}".encode()
    encoded = base64.urlsafe_b64encode(text).decode().rstrip("=")

    deal_menu = types.InlineKeyboardMarkup()
    cancel = types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É', callback_data='cancel_deal')
    deal_menu.add(cancel)
    
    bot.send_message(
        chat_id=chat_id,
        text=f"‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\nüí∞ –°—É–º–º–∞: {price_sell} {user_data[chat_id]['currency']}\n\
üìú –û–ø–∏—Å–∞–Ω–∏–µ: {description}\nüîó –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è: https://t.me/ExempleExemple_bot_bot?start={encoded}",
        reply_markup=deal_menu
    )

    user_data[chat_id]['encoded'] = encoded
    user_data[chat_id]["deal_id"] = message.message_id


def cancel_message_deal(chat_id,message_id):
    cancel_message = f"*‚ùå –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É* #{user_data[chat_id]['encoded']}?\n\n\
–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å."
    
    cancel_menu = types.InlineKeyboardMarkup()
    yes = types.InlineKeyboardButton(text='‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å', callback_data='yes')
    no = types.InlineKeyboardButton(text='üîô –ù–µ—Ç', callback_data='no')
    cancel_menu.add(yes)
    cancel_menu.add(no)

    bot.send_message(
        chat_id=chat_id,
        text=cancel_message,
        parse_mode="Markdown",
        reply_markup=cancel_menu
    )

    user_data[chat_id]['last_message_id'] = message_id

def replace_money(chat_id,message_id):
    message_replace = "*üí± –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –æ–±–º–µ–Ω–∞ üëá*"

    replace_menu = types.InlineKeyboardMarkup()
    TON_RUB = types.InlineKeyboardButton(text='üíéTON -> RUB üá∑üá∫ (306.94)', callback_data='TON_RUB')
    TON_UAH = types.InlineKeyboardButton(text='üíéTON -> UAH üá∫üá¶ (151.79)', callback_data='TON_UAH')
    TON_KZT = types.InlineKeyboardButton(text='üíéTON -> KZT üá∞üáø (1835.68)', callback_data='TON_KZT')
    TON_BYN = types.InlineKeyboardButton(text='üíéTON -> BYN üáßüáæ (11.95)', callback_data='TON_BYN')
    TON_UZS = types.InlineKeyboardButton(text='üíéTON -> UZS üá∫üáø (47210.63)', callback_data='TON_UZS')
    TON_KGS = types.InlineKeyboardButton(text='üíéTON -> KGS üá∞üá¨ (312.59)', callback_data='TON_KGS')
    back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')

    replace_menu.add(TON_RUB)
    replace_menu.add(TON_UAH)
    replace_menu.add(TON_KZT)
    replace_menu.add(TON_BYN)
    replace_menu.add(TON_UZS)
    replace_menu.add(TON_KGS)
    replace_menu.add(back)

    bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=message_replace,
            parse_mode="Markdown",
            reply_markup=replace_menu
        )
    
    user_data[chat_id]['last_message_id'] = message_id


def price_TON(chat_id,message_id,name_money):
    money = name_money.split("(")[0][0:-1]
    price =  name_money.split("(")[1][0:-1]

    message_price = f"–¶–µ–Ω–∞ –∑–∞ üíé 1 TON: {price} {money[0:-2]}\n\n\
–õ–∏–º–∏—Ç—ã: üíé 1 - 1999.9 TON\n–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –ö–∞—Ä—Ç–∞ {money}\n\n\
–î–ª—è –æ–±–º–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá"
    
    price_menu = types.InlineKeyboardMarkup()
    exchange = types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å –æ–±–º–µ–Ω üí±', callback_data='exchange')
    back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')
    price_menu.add(exchange)
    price_menu.add(back)

    bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=message_price,
            parse_mode="Markdown",
            reply_markup=price_menu
        )
    
    user_data[chat_id]['last_message_id'] = message_id


def ready_exchange(chat_id,message_id):
    message_exchange = "üíº –°–æ–∑–¥–∞–Ω–∏–µ –æ–±–º–µ–Ω–∞\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É TON –æ–±–º–µ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `100.5`"

    exchange_menu = types.InlineKeyboardMarkup()
    back = types.InlineKeyboardButton(text='üîô–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='back_menu')
    exchange_menu.add(back)

    bot.edit_message_caption(
            chat_id=chat_id,
            message_id=message_id,
            caption=message_exchange,
            parse_mode="Markdown",
            reply_markup=exchange_menu
        )
    
    user_data[chat_id]['input_TON'] = True
    user_data[chat_id]['last_message_id'] = message_id


bot.polling(none_stop=True, interval=0)
